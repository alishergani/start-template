@mixin ab-btn-hover($initial-opacity: 0.4) {
    @include transition($transition);
    opacity: $initial-opacity;
    .active > &,
    &:hover,
    &.active {
        opacity: 1;
    }
}

@mixin ab-button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
    color: $background;
    border-width: 1px 0;
    border-radius: 0;
    border-color: $border;
    border-top-color: transparent;
    @include ab-btn-hover();
    @include hover {
        color: $hover-background;
        border-color: $hover-border;
    }
    &:focus,
    &.focus {
        // Avoid using mixin so we can pass custom focus shadow properly
        @if $enable-shadows {
            box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
        }
        @else {
            box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
        }
    } // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
        color: color-yiq($background);
        border-color: $border;
    }
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show>&.dropdown-toggle {
        color: color-yiq($active-background);
        background-color: $active-background;
        @if $enable-gradients {
            background-image: none; // Remove the gradient for the pressed/active state
        }
        border-color: $active-border;
        &:focus {
            // Avoid using mixin so we can pass custom focus shadow properly
            @if $enable-shadows {
                box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
            }
            @else {
                box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
            }
        }
    }
}